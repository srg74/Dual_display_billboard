name: Generate Documentation

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Doxygen
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
        
    - name: Generate documentation
      run: |
        doxygen Doxyfile
        # Fix XHTML content-type to HTML to prevent browser rendering issues
        find docs/generated/html -name "*.html" -exec sed -i 's/content="text\/xhtml/content="text\/html/g' {} \;
        find docs/generated/html -name "*.html" -exec sed -i 's/<!DOCTYPE html PUBLIC.*>/<!DOCTYPE html>/g' {} \;
        
    - name: Create redirect page
      run: |
        # Create a completely clean deployment directory
        rm -rf gh-pages-deploy
        mkdir -p gh-pages-deploy
        # Copy ONLY the documentation to api-docs subdirectory
        cp -r docs/generated/html gh-pages-deploy/api-docs
        # Create root index.html that redirects to api-docs
        echo '<!DOCTYPE html>' > gh-pages-deploy/index.html
        echo '<html>' >> gh-pages-deploy/index.html
        echo '<head>' >> gh-pages-deploy/index.html
        echo '<meta http-equiv="refresh" content="0; url=api-docs/">' >> gh-pages-deploy/index.html
        echo '<title>ESP32 Dual Display Billboard - Documentation</title>' >> gh-pages-deploy/index.html
        echo '</head>' >> gh-pages-deploy/index.html
        echo '<body>' >> gh-pages-deploy/index.html
        echo '<h1>ESP32 Dual Display Billboard Documentation</h1>' >> gh-pages-deploy/index.html
        echo '<p>Redirecting to <a href="api-docs/">API Documentation</a>...</p>' >> gh-pages-deploy/index.html
        echo '</body>' >> gh-pages-deploy/index.html
        echo '</html>' >> gh-pages-deploy/index.html
        # Add .nojekyll to prevent Jekyll processing
        touch gh-pages-deploy/.nojekyll
        # Verify what we're deploying
        echo "Files being deployed:"
        find gh-pages-deploy -type f | head -10
        
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/generated/html/
        retention-days: 30
        
    - name: Deploy to GitHub Pages (main branch only)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./gh-pages-deploy
        force_orphan: true
        keep_files: false
        enable_jekyll: false
        # Completely clean deployment - only our generated content
        cname: false
